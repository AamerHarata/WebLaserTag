// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebLaserTag.Data;

namespace WebLaserTag.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20191015082436_create")]
    partial class create
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("WebLaserTag.Models.Game", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("Ended");

                    b.Property<string>("FlagHolder");

                    b.Property<double>("FlagX");

                    b.Property<double>("FlagY");

                    b.Property<string>("HostId");

                    b.Property<string>("Name");

                    b.Property<string>("Password");

                    b.Property<double>("StartX");

                    b.Property<double>("StartY");

                    b.Property<DateTime>("TimeStamp");

                    b.HasKey("Id");

                    b.HasIndex("HostId");

                    b.ToTable("Games");
                });

            modelBuilder.Entity("WebLaserTag.Models.Player", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("WebLaserTag.Models.PlayerData", b =>
                {
                    b.Property<string>("PlayerId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CurrentState");

                    b.Property<bool>("HasFlag");

                    b.Property<string>("PlayerId1");

                    b.Property<DateTime>("TimeStamp");

                    b.Property<double>("XGeo");

                    b.Property<double>("YGeo");

                    b.HasKey("PlayerId");

                    b.HasIndex("PlayerId1");

                    b.ToTable("PlayersData");
                });

            modelBuilder.Entity("WebLaserTag.Models.PlayerInGame", b =>
                {
                    b.Property<string>("PlayerId");

                    b.Property<string>("GameId");

                    b.Property<bool>("Host");

                    b.Property<DateTime>("JoinTime");

                    b.Property<string>("PlayerId1");

                    b.HasKey("PlayerId", "GameId");

                    b.HasAlternateKey("PlayerId");

                    b.HasIndex("GameId");

                    b.HasIndex("PlayerId1");

                    b.ToTable("PlayersInGame");
                });

            modelBuilder.Entity("WebLaserTag.Models.Game", b =>
                {
                    b.HasOne("WebLaserTag.Models.Player", "Host")
                        .WithMany()
                        .HasForeignKey("HostId");
                });

            modelBuilder.Entity("WebLaserTag.Models.PlayerData", b =>
                {
                    b.HasOne("WebLaserTag.Models.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId1");
                });

            modelBuilder.Entity("WebLaserTag.Models.PlayerInGame", b =>
                {
                    b.HasOne("WebLaserTag.Models.Game", "Game")
                        .WithMany()
                        .HasForeignKey("GameId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebLaserTag.Models.Player", "Player")
                        .WithMany()
                        .HasForeignKey("PlayerId1");
                });
#pragma warning restore 612, 618
        }
    }
}
